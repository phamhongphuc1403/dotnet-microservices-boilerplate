version: '3.4'

services:
  tinycrm.api-gateway:
    image: tinycrm.api-gateway
    ports:
      - "3000:80"
    build:
      context: .
      dockerfile: APIGateway/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
      - Routes__0__DownstreamHostAndPorts__0__Host=tinycrm.identity.api
      - Routes__0__DownstreamHostAndPorts__0__Port=80
      - SwaggerEndPoints__0__Config__0__Url=http://tinycrm.identity.api/swagger/v1/swagger.json
      - Routes__1__DownstreamHostAndPorts__0__Host=tinycrm.products.api
      - Routes__1__DownstreamHostAndPorts__0__Port=80
      - SwaggerEndPoints__1__Config__0__Url=http://tinycrm.products.api/swagger/v1/swagger.json
      - Routes__2__DownstreamHostAndPorts__0__Host=tinycrm.sales.api
      - Routes__2__DownstreamHostAndPorts__0__Port=80
      - SwaggerEndPoints__2__Config__0__Url=http://tinycrm.sales.api/swagger/v1/swagger.json
    depends_on:
      - tinycrm.products.api
      - tinycrm.sales.api
      - tinycrm.identity.api
    links:
      - tinycrm.products.api
      - tinycrm.sales.api
      - tinycrm.identity.api
  tinycrm.identity.api:
    image: tinycrm.identity
    ports:
      - "5003:80"
      - "50051:50051"
    build:
      context: .
      dockerfile: Services/Identity/Presentation/TinyCRM.Identity.API/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Postgres=Host=tinycrm.db; Port=5432; Database=TinyCRM.Identity; Username=postgres; Password=password
      - ConnectionStrings__Redis=tinycrm.redis
      - Kestrel__Endpoints__Http__Url=http://+:80
      - Kestrel__Endpoints__gRPC__Url=http://+:50051
    depends_on:
      tinycrm.db:
        condition: service_healthy
      tinycrm.redis:
        condition: service_healthy
    links:
      - tinycrm.db
  tinycrm.products.api:
    image: tinycrm.products
    ports:
      - "5001:80"
    build:
      context: .
      dockerfile: Services/Products/Presentation/TinyCRM.Products.API/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Postgres=Host=tinycrm.db; Port=5432; Database=TinyCRM.Products; Username=postgres; Password=password
      - ConnectionStrings__RabbitMQ=tinycrm.rabbitmq
      - ConnectionStrings__Redis=tinycrm.redis
      - GrpcUrls__Identity=http://tinycrm.identity.api:50051
    depends_on:
      tinycrm.db:
        condition: service_healthy
      tinycrm.rabbitmq:
        condition: service_healthy
      tinycrm.redis:
        condition: service_healthy
    links:
      - tinycrm.db
      - tinycrm.rabbitmq
  tinycrm.sales.api:
    image: tinycrm.sales
    ports:
      - "5002:80"
    build:
      context: .
      dockerfile: Services/Sales/Presentation/TinyCRM.Sales.API/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Postgres=Host=tinycrm.db; Port=5432; Database=TinyCRM.Sales; Username=postgres; Password=password
      - ConnectionStrings__RabbitMQ=tinycrm.rabbitmq
      - ConnectionStrings__Redis=tinycrm.redis
      - GrpcUrls__Identity=http://tinycrm.identity.api:50051
    depends_on:
      tinycrm.db:
        condition: service_healthy
      tinycrm.rabbitmq:
        condition: service_healthy
      tinycrm.redis:
        condition: service_healthy
    links:
      - tinycrm.db
      - tinycrm.rabbitmq
  tinycrm.db:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - crmdata:/var/opt/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  tinycrm.redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
  tinycrm.rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 3
volumes:
  crmdata: