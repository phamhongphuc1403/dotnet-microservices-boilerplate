version: '3.4'

services:
  tinycrm.api-gateway:
    image: ${DOCKER_REGISTRY-}tinycrm.api-gateway
    ports:
      - "3000:80"
    build:
      context: .
      dockerfile: TinyCRM.ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - tinycrm.product.api
      - tinycrm.sale.api
  tinycrm.product.api:
    image: ${DOCKER_REGISTRY-}tinycrm.product.api
    ports:
      - "5001:80"
    build:
      context: .
      dockerfile: Services/Product/Presentation/TinyCRM.ProductManagement.API/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
      - CONNECTION_STRING=Host=tinycrm.db; Port=5432; Database=TinyCRM.Product; Username=postgres; Password=password
    depends_on:
      tinycrm.db:
        condition: service_healthy
    links:
      - tinycrm.db
  tinycrm.sale.api:
    image: ${DOCKER_REGISTRY-}tinycrm.sale.api
    ports:
      - "5002:80"
    build:
      context: .
      dockerfile: Services/Sale/Presentation/TinyCRM.SaleManagement.API/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
      - CONNECTION_STRING=Host=tinycrm.db; Port=5432; Database=TinyCRM.Sale; Username=postgres; Password=password
    depends_on:
      tinycrm.db:
        condition: service_healthy
    links:
      - tinycrm.db
  tinycrm.db:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - crmdata:/var/opt/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 10s
      timeout: 5s
      retries: 5
  tinycrm.redis:
    image: redis
    ports:
      - "6379:6379"
volumes:
  crmdata: